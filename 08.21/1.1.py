from random import choice


class Cards:
    """Случайный выбор игральной карты"""

    def __init__(self):
        self._SUITS = ['черви', 'бубны', 'пики', 'крести']
        # ИСПРАВИТЬ: зря смешали в одном списке числа и строки — себе же усложнили дальнейшую потенциальную обработку этого списка — воспользуйтесь рекомендацией по номиналам из условия задачи


        # ИСПРАВИТЬ: напоминаю, что согласно условию задачи от вас требуется получить генератор — здесь генератора нет

    def __iter__(self):
        # ИСПРАВИТЬ: вы получили бесконечный итератор, выдающий случайные карты, а не итератор колоды из 52 карт (см. тест ниже)
        cards = list((i, j) for j in self._SUITS for i in list(range(2, 15)))
        while cards:
            rand_card = choice(cards)
            cards.remove(rand_card)
            yield rand_card

deck = Cards()
for elem in list(deck):
    print(elem)



# КОММЕНТАРИЙ: при вычислении заголовка цикла от объекта deck вызывается метод __iter__(), который возвращает этот же самый объект — а от этого возвращённого объекта уже вызывается метод __next__(), возвращаемое значение которого записывается в переменную цикла card; поскольку нигде нет выброса исключения StopIteration, вся эта круговерть будет продолжаться и продолжаться



# СДЕЛАТЬ: вообще, здесь не требовалось писать класс — но раз уж взялись, то теперь переписывайте его так, чтобы это был корректный класс, с помощью которого можно управлять колодой, возвращать генератор и итерироваться по нему


# ДОБАВИТЬ: закомментированный вывод результатов нескольких запусков скрипта с различными входными данными (при наличии)
# tests:
#
# (7, 'крести')
# (6, 'пики')
# (7, 'бубны')
# (3, 'бубны')
# (2, 'пики')
# (9, 'черви')
# (4, 'пики')
# (13, 'бубны')
# (12, 'бубны')
# (3, 'крести')
# (13, 'пики')
# (12, 'крести')
# (3, 'пики')
# (9, 'пики')
# (6, 'бубны')
# (14, 'бубны')
# (11, 'бубны')
# (5, 'черви')
# (14, 'черви')
# (8, 'бубны')
# (4, 'черви')
# (9, 'крести')
# (4, 'крести')
# (12, 'черви')
# (9, 'бубны')
# (8, 'черви')
# (2, 'черви')
# (13, 'черви')
# (11, 'пики')
# (8, 'крести')
# (10, 'пики')
# (10, 'крести')
# (13, 'крести')
# (3, 'черви')
# (7, 'черви')
# (4, 'бубны')
# (5, 'бубны')
# (2, 'крести')
# (10, 'бубны')
# (14, 'пики')
# (10, 'черви')
# (2, 'бубны')
# (11, 'черви')
# (14, 'крести')
# (8, 'пики')
# (7, 'пики')
# (11, 'крести')
# (5, 'крести')
# (6, 'крести')
# (5, 'пики')
# (6, 'черви')
# (12, 'пики')



# ИТОГ: доработать — 1/5
